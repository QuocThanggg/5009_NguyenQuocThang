{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenphat/Desktop/NgonNguMoi/DoAn/hasaki-store/src/components/ProductDetail.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductDetail = ({\n  match\n}) => {\n  const {\n    productId\n  } = match.params;\n\n  // Assuming you have a function to retrieve product details by ID\n  // Replace this with your actual logic to fetch product details\n  const getProductDetailsById = productId => {\n    // Here, you would fetch the product details from your data source\n    // Return a product object or null if not found\n    // Example:\n    return {\n      id: productId,\n      name: \"Sản phẩm \" + productId,\n      price: \"100.000 VNĐ\",\n      description: \"Mô tả sản phẩm \" + productId,\n      image: `${process.env.PUBLIC_URL}/images/sanpham.jpeg`\n    };\n  };\n\n  // Fetch the product details based on productId\n  const product = getProductDetailsById(productId);\n\n  // If product is not found, you can render a message or handle accordingly\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Product not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render product details\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Product ID: \", product.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", product.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", product.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", product.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.image,\n      alt: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = ProductDetail;\nexport default ProductDetail;\nvar _c;\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProductDetail","match","productId","params","getProductDetailsById","id","name","price","description","image","process","env","PUBLIC_URL","product","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/nguyenphat/Desktop/NgonNguMoi/DoAn/hasaki-store/src/components/ProductDetail.js"],"sourcesContent":["import React from 'react';\n\nconst ProductDetail = ({ match }) => {\n  const { productId } = match.params;\n\n  // Assuming you have a function to retrieve product details by ID\n  // Replace this with your actual logic to fetch product details\n  const getProductDetailsById = (productId) => {\n    // Here, you would fetch the product details from your data source\n    // Return a product object or null if not found\n    // Example:\n    return {\n      id: productId,\n      name: \"Sản phẩm \" + productId,\n      price: \"100.000 VNĐ\",\n      description: \"Mô tả sản phẩm \" + productId,\n      image: `${process.env.PUBLIC_URL}/images/sanpham.jpeg`\n    };\n  };\n\n  // Fetch the product details based on productId\n  const product = getProductDetailsById(productId);\n\n  // If product is not found, you can render a message or handle accordingly\n  if (!product) {\n    return <div>Product not found!</div>;\n  }\n\n  // Render product details\n  return (\n    <div>\n      <h2>Product Detail</h2>\n      <p>Product ID: {product.id}</p>\n      <p>Name: {product.name}</p>\n      <p>Price: {product.price}</p>\n      <p>Description: {product.description}</p>\n      <img src={product.image} alt={product.name} />\n      {/* Render other product details as needed */}\n    </div>\n  );\n}\n\nexport default ProductDetail;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACnC,MAAM;IAAEC;EAAU,CAAC,GAAGD,KAAK,CAACE,MAAM;;EAElC;EACA;EACA,MAAMC,qBAAqB,GAAIF,SAAS,IAAK;IAC3C;IACA;IACA;IACA,OAAO;MACLG,EAAE,EAAEH,SAAS;MACbI,IAAI,EAAE,WAAW,GAAGJ,SAAS;MAC7BK,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE,iBAAiB,GAAGN,SAAS;MAC1CO,KAAK,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW;IACnC,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,OAAO,GAAGT,qBAAqB,CAACF,SAAS,CAAC;;EAEhD;EACA,IAAI,CAACW,OAAO,EAAE;IACZ,oBAAOd,OAAA;MAAAe,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;;EAEA;EACA,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnB,OAAA;MAAAe,QAAA,GAAG,cAAY,EAACD,OAAO,CAACR,EAAE;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BnB,OAAA;MAAAe,QAAA,GAAG,QAAM,EAACD,OAAO,CAACP,IAAI;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BnB,OAAA;MAAAe,QAAA,GAAG,SAAO,EAACD,OAAO,CAACN,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BnB,OAAA;MAAAe,QAAA,GAAG,eAAa,EAACD,OAAO,CAACL,WAAW;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCnB,OAAA;MAAKoB,GAAG,EAAEN,OAAO,CAACJ,KAAM;MAACW,GAAG,EAAEP,OAAO,CAACP;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3C,CAAC;AAEV,CAAC;AAAAG,EAAA,GAtCKrB,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}